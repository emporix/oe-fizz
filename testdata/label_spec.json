{
    "openapi": "3.0.1",
    "info": {
        "title": "Test Server",
        "description": "This is a test server.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://foo.bar/{basePath}",
            "description": "Such Server, Very Wow",
            "variables": {
                "basePath": {
                    "enum": [
                        "v1",
                        "v2",
                        "beta"
                    ],
                    "default": "v2",
                    "description": "version of the API"
                }
            }
        }
    ],
    "paths": {
        "/test/{a}/{b}": {
            "get": {
                "operationId": "GetTest2",
                "parameters": [
                    {
                        "name": "a",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "b",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {},
                    {
                        "oauth2": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        },
        "/test/{c}": {
            "post": {
                "operationId": "PostTest",
                "parameters": [
                    {
                        "name": "c",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "FizzCustomTime": {
                "type": "object",
                "description": "This is Z",
                "example": "2022-02-07T18:00:00"
            },
            "FizzT": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "string",
                        "description": "This is X"
                    },
                    "y": {
                        "type": "integer",
                        "description": "This is Y",
                        "format": "int32"
                    },
                    "z": {
                        "$ref": "#/components/schemas/FizzCustomTime"
                    }
                }
            },
            "PostTestInput": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "A short message"
                    },
                    "value": {
                        "type": "object",
                        "description": "A nullable value of arbitrary type",
                        "nullable": true
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "in": "header",
                "name": "api_key"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://example.com/api/oauth/dialog",
                        "scopes": {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "api_key": []
        },
        {
            "oauth2": [
                "write:pets",
                "read:pets"
            ]
        }
    ]
}